require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13.0'

ENVFILES = {
  'Debug' => '$(PODS_ROOT)/../../.env.dev',
  'Release' => '$(PODS_ROOT)/../../.env.local',
}
project 'AxessEQ',
        'Dev.Debug' => :debug,
        'Dev.Release' => :release, 
        'Prod.Debug' => :debug,
        'Prod.Release' => :release

target 'AxessEQ' do
  permissions_path = '../node_modules/react-native-permissions/ios'
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
  :hermes_enabled => false
    # :hermes_enabled => true,
    # :fabric_enabled => flags[:fabric_enabled],

    # :flipper_configuration => FlipperConfiguration.enabled,
  )
  $RNFirebaseAsStaticFramework = true
  pod 'Firebase', :modular_headers => true
  pod 'Firebase/Core', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'react-native-fbsdk-next', :path => '../node_modules/react-native-fbsdk-next'
  pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications/Permission-Notifications.podspec"
  pod 'react-native-config/Extension', :path => '../node_modules/react-native-config'
  
  target 'AxessEQTests' do
    inherit! :complete
    # Pods for testing
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
 
  # use_flipper!({ "Flipper-DoubleConversion" => "3.1.7" })
  # use_flipper!()
# use_flipper!({ 'Flipper-Folly' => '2.6' })
use_flipper!(configurations: ['Dev.Debug', 'Dev.Release','Prod.Debug','Prod.Release'])


  post_install do |installer|
    react_native_post_install(installer)
    # __apply_Xcode_12_5_M1_post_install_workaround(installer)
      installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
          if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
            target.build_configurations.each do |config|
                config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
            end
          end
        end
      end
    end
  end


